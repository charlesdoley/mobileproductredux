{"version":3,"sources":["actions/types.js","products.js","actions/productActions.js","components/ProductList.js","components/EditProduct.js","reducers/productReducer.js","store.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_PRODUCT","EDIT_PRODUCT","products","name","pricingTier","priceRange","weight","availability","productUrl","isEditable","pricingInfo","budget","premier","fetchAction","dispatch","type","payload","ProductList","this","props","productElement","map","product","index","react_default","a","createElement","Table","Row","key","Cell","react_router_dom","to","pathname","state","id","Button","primary","Fragment","Container","className","Header","size","celled","HeaderCell","Body","Component","connect","items","EditProduct","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_ref","value","setState","price_tier","price_range","priceRangeOptions","tier","text","changeRange","_ref2","toggle","editable","product_url","location","productList","onChange","bind","assertThisInitialized","onSubmit","defineProperty","target","preventDefault","editProduct","history","push","Form","Field","required","placeholder","Radio","label","checked","Dropdown","fluid","selection","options","Checkbox","disabled","initialState","allReducers","combineReducers","arguments","length","undefined","action","objectSpread","item","middleware","thunk","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4160951b.chunk.js","sourcesContent":["export const FETCH_PRODUCT = 'FETCH_PRODUCT';\nexport const EDIT_PRODUCT = 'EDIT_PRODUCT';\nexport const SUBMIT_PRODUCT = 'SUBMIT_PRODUCT';","export const products = [\r\n    {\r\n      name: \"Micromax A57\",\r\n      pricingTier: \"budget\",\r\n      priceRange: \"5k-8k\",\r\n      weight: 200, // In grams,\r\n      availability: 100,\r\n      productUrl: \"https://e...content-available-to-author-only...e.com/mma57\",\r\n      isEditable: true\r\n    },\r\n    {\r\n      name: \"OnePlus 6T\",\r\n      pricingTier: \"premier\",\r\n      priceRange: \"35k-45k\",\r\n      weight: 200, // In grams\r\n      availability: 30,\r\n      productUrl: \"https://e...content-available-to-author-only...e.com/op6t\",\r\n      isEditable: true\r\n    },\r\n    {\r\n      name: \"Redmi Ultra\",\r\n      pricingTier: \"budget\",\r\n      priceRange: \"8k-11k\",\r\n      weight: 150, // In grams\r\n      availability: 50,\r\n      productUrl: \"https://e...content-available-to-author-only...e.com/redmiu\",\r\n      isEditable: true\r\n    }\r\n  ]\r\n   \r\n  export const pricingInfo = {\r\n    budget: [\r\n      \"4k-6k\",\r\n      \"5k-8k\",\r\n      \"8k-11k\"\r\n    ],\r\n    premier: [\r\n      \"23k-28k\",\r\n      \"30k-34k\",\r\n      \"35k-45k\"\r\n    ]\r\n  }\r\n","import { FETCH_PRODUCT, EDIT_PRODUCT } from './types';\nimport {products} from '../products';\n\nexport function fetchAction(){\n    return function(dispatch){\n        return dispatch({\n            type: FETCH_PRODUCT,\n            payload: products\n        });\n    }\n}\n\n\n\nexport function editProduct(state){\n    return function(dispatch){\n        return dispatch({\n            type: EDIT_PRODUCT,\n            payload: {\n                name: state.name,\n                pricingTier: state.price_tier,\n                priceRange: state.price_range,\n                weight: state.weight, \n                availability: state.availability,\n                productUrl: state.product_url,\n                isEditable: state.editable\n            },\n            id:state.id\n        });\n    }\n}","import React, { Component } from 'react';\nimport { Table, Button , Header , Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../App.css';\nimport { connect } from 'react-redux';\nimport { fetchAction } from '../actions/productActions';\nclass ProductList extends Component {\n    // constructor(props){\n    //     super(props);\n    // }\n    componentDidMount(){\n        this.props.fetchAction();\n    }\n    render() {  \n        const productElement = this.props.products.map( (product, index) => (\n            <Table.Row key={index}>\n                <Table.Cell>{product.name}</Table.Cell>\n                <Table.Cell>{product.weight}</Table.Cell>\n                <Table.Cell>{product.availability}</Table.Cell>\n                <Table.Cell>{product.isEditable && (<Link to={{pathname:'/editproduct', state:{id:index}}}><Button primary>Edit</Button></Link>)}</Table.Cell>\n            </Table.Row>\n        ));\n        return (\n            <div>\n                <React.Fragment>\n                    <Container className=\"marginTop\">\n                        <Header size='large'>Mobile Products</Header>\n                        <Table celled>\n                            <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Name</Table.HeaderCell>\n                                <Table.HeaderCell>Weight</Table.HeaderCell>\n                                <Table.HeaderCell>Availability</Table.HeaderCell>\n                                <Table.HeaderCell>isEditable</Table.HeaderCell>\n                            </Table.Row>\n                            </Table.Header>\n                        \n                            <Table.Body>\n                                {productElement}\n                            </Table.Body>\n                        </Table>\n                    </Container>\n                </React.Fragment>\n            </div>\n        )\n    }\n}\nProductList.propTypes = {\n    fetchAction: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired\n}\nconst mapStateToProps = state => ({\n    products: state.products.items  \n});\n\nexport default connect(mapStateToProps, { fetchAction })(ProductList);","import React, { Component } from 'react'\nimport { Button, Checkbox, Form, Container, Radio, Dropdown } from 'semantic-ui-react'\nimport '../App.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {pricingInfo} from '../products';\nimport { fetchAction, editProduct } from '../actions/productActions';\nclass EditProduct extends Component {\n    productList;\n    id;\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            weight: '',\n            availability: 0,\n            id: 0,\n            product_url: '',\n            price_tier: '',\n            price_range: [],\n            editable: true,\n            priceRangeOptions : []   \n        };\n        this.id = this.props.location.state.id;\n        this.productList = this.props.products[this.id];\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentWillMount(){\n        this.setState({\n                name: this.productList.name,\n                weight: this.productList.weight,\n                availability: this.productList.availability,\n                product_url: this.productList.productUrl,\n                id: this.id,\n                price_tier: this.productList.pricingTier,\n                price_range: this.productList.priceRange,\n                editable: this.productList.isEditable,\n                priceRangeOptions : (this.productList.pricingTier === 'premier') ? pricingInfo.premier.map( function(value,index){\n                    return {\n                        key: index,\n                        value: value,\n                        text: value\n                    }\n                    }) : pricingInfo.budget.map( function(value,index){\n                    return {\n                        key: index,\n                        value: value,\n                        text: value\n                    }\n                })\n            });\n    }\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n    onSubmit(e){\n        e.preventDefault();\n        this.setState({\n            name: this.state.name,\n            weight: this.state.weight,\n            id: this.id,\n            availability: this.state.availability,\n            product_url: this.state.productUrl,\n            price_tier: this.state.pricingTier,\n            price_range: this.state.priceRange,\n            editable: this.state.isEditable,\n            priceRangeOptions : (this.state.pricingTier === 'premier') ? pricingInfo.premier.map( function(value,index){\n                return {\n                    key: index,\n                    value: value,\n                    text: value\n                }\n                }) : pricingInfo.budget.map( function(value,index){\n                return {\n                    key: index,\n                    value: value,\n                    text: value\n                }\n            })\n        });\n        \n        this.props.editProduct(this.state);\n        this.props.history.push('/');\n    }\n    handleChange = (e, { value }) => {\n        this.setState({ \n        price_tier: value,\n        price_range:value,\n        priceRangeOptions : (value === 'premier') ? pricingInfo.premier.map( function(tier,index){\n            return {\n                key: index,\n                value: tier,\n                text: tier\n            }\n            }) : pricingInfo.budget.map( function(tier,index){\n            return {\n                key: index,\n                value: tier,\n                text: tier\n            }\n        })\n        \n    })\n}\nchangeRange = (e, { value }) => {\n    this.setState({ \n    price_range:value\n    \n})\n}\n    toggle = () => this.setState({ editable: !this.state.editable })\n    render() {\n        return (\n            <React.Fragment>\n                <Container className=\"marginTop\">\n                <Form onSubmit={this.onSubmit}>\n                     <Form.Field>\n                    <label>Name</label>\n                    <input name='name' value={this.state.name} onChange={this.onChange} required/>\n                    </Form.Field> \n                     <Form.Field>\n                    <label>Weight</label>\n                    <input name='weight' value={this.state.weight} onChange={this.onChange} required/>\n                    </Form.Field>\n                    <Form.Field>\n                    <label>Availability</label>\n                    <input placeholder=\"Only Numbers\" type=\"number\" name='availability' value={this.state.availability} onChange={this.onChange}/>\n                    </Form.Field>\n                    <Form.Field>\n                    <label>Product URL</label>\n                    <input name='product_url' value={this.state.product_url} onChange={this.onChange} required/>\n                    </Form.Field>\n                    <Form.Field>\n                    <label>Price Tier</label>\n                    <Radio label='Budget' name='radioGroup' value='budget' checked={this.state.price_tier === 'budget'} onChange={this.handleChange}/>\n                    <Radio label='Premier' name='radioGroup' value='premier'  checked={this.state.price_tier === 'premier'} onChange={this.handleChange}/>\n                    </Form.Field>\n                    <Form.Field>\n                    <label>Price Range</label>\n                    <Dropdown placeholder={this.state.price_range} fluid selection options={this.state.priceRangeOptions} onChange={this.changeRange}/>\n                    </Form.Field>\n                    <Form.Field>\n                    <Checkbox label='Is Editable' onChange={this.toggle} checked={this.state.editable} required/>\n                    </Form.Field>\n                    <Button primary type='submit' \n                        disabled={this.state.name === '' || this.state.weight === '' || this.state.product_url === ''\n                        || this.state.price_tier === '' || !this.state.price_range}>Submit</Button>\n                </Form>\n                </Container>\n            </React.Fragment>\n        )\n    }\n    }\n    EditProduct.propTypes = {\n        fetchAction: PropTypes.func.isRequired,\n        editProduct: PropTypes.func.isRequired,\n        products: PropTypes.array.isRequired,\n    }\n    const mapStateToProps = (state) => ({\n        products: state.products.items\n    });\n    \n    export default connect(mapStateToProps, { fetchAction, editProduct })(EditProduct);","import { FETCH_PRODUCT, EDIT_PRODUCT } from '../actions/types';\nimport {products} from '../products';\nconst initialState = {\n    items: products\n};\nexport default function(state = {items: []}, action){\n    \n    switch(action.type){\n        case FETCH_PRODUCT:\n            return {\n                ...initialState,...state\n            }\n        case EDIT_PRODUCT:\n            const updatedList = state.items.map((item,index) => {\n                if(index === action.id){\n                    return {\n                         ...action.payload \n                    }\n                }\n                return item\n            });\n            return {\n                items: updatedList\n            }\n        default:\n            return initialState;\n    }\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport productReducer from './reducers/productReducer';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n    products: productReducer\n});\n\nconst middleware = [thunk];\n\nconst store = createStore(allReducers, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nexport default store;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport ProductList from './components/ProductList';\nimport EditProduct from './components/EditProduct';\nimport store from './store';\n\n\n  \nclass App extends Component {\n \n  render() {\n    return (\n      <Provider store={store}>\n        <React.Fragment>\n        <Switch>\n          <Route exact path=\"/\" component={ProductList} />\n          <Route path=\"/editproduct\" component={EditProduct} />\n          <Route path=\"*\" component={ProductList} />\n        </Switch>\n      </React.Fragment>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n        <Router>\n            <App />\n        </Router>,\n     document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}