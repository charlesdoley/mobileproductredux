{"ast":null,"code":"import _classCallCheck from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/charlis/Documents/UI Projects/ecomm/src/components/ProductList.js\";\nimport React, { Component } from 'react';\nimport { Table, Button, Header, Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchProducts } from '../actions/productActions';\n\nvar ProductList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductList, _Component);\n\n  function ProductList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProductList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProductList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.productList = [];\n    return _this;\n  }\n\n  _createClass(ProductList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchProducts();\n      console.log(this.props.products); //    console.log(this.props);\n    } // constructor(props){\n    //     super(props);\n    //     console.log(this.props);\n    // }\n    // componentWillReceiveProps(props){\n    //     // console.log(props);\n    // }\n    // componentDidUpdate() {\n    //     window.addEventListener('load', this.handleLoad);\n    //  }\n\n  }, {\n    key: \"render\",\n    // loadList(){\n    //     console.log('')\n    // }\n    value: function render() {\n      //     const productElement = this.props.products.map( (product, index) => (\n      //         <Table.Row key={index}>\n      //             <Table.Cell>{product.name}</Table.Cell>\n      //             <Table.Cell>{product.weight}</Table.Cell>\n      //             <Table.Cell>{product.availability}</Table.Cell>\n      //             <Table.Cell>{product.isEditable && (<Link to={{pathname:'/editproduct', state:{id:index}}}><Button primary>Edit</Button></Link>)}</Table.Cell>\n      //         </Table.Row>\n      //     ));\n      console.log(this.props.products); // console.log(this.props);\n      // const productElement = this.props.products.map( (product, index) => (\n      //     <Table.Row key={index}>\n      //         <Table.Cell>{product.name}</Table.Cell>\n      //         <Table.Cell>{product.weight}</Table.Cell>\n      //         <Table.Cell>{product.availability}</Table.Cell>\n      //         <Table.Cell>{product.isEditable && (<Link to={{pathname:'/editproduct', state:{id:index}}}><Button primary>Edit</Button></Link>)}</Table.Cell>\n      //     </Table.Row>\n      // ));\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Mobile Products\"), React.createElement(Table, {\n        celled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Availability\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"isEditable\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ProductList;\n}(Component);\n\nProductList.propTypes = {\n  fetchProducts: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.products.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchProducts: fetchProducts\n})(ProductList);","map":{"version":3,"sources":["/Users/charlis/Documents/UI Projects/ecomm/src/components/ProductList.js"],"names":["React","Component","Table","Button","Header","Container","Link","PropTypes","connect","fetchProducts","ProductList","productList","props","console","log","products","propTypes","func","isRequired","mapStateToProps","state","items"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAyBC,MAAzB,EAAkCC,SAAlC,QAAmD,mBAAnD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;;IACMC,W;;;;;;;;;;;;;;;;;UAgBFC,W,GAAc,E;;;;;;wCAfK;AACf,WAAKC,KAAL,CAAWH,aAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,QAAvB,EAFe,CAGnB;AACC,K,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA;AACA;AACA;6BACS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACGF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,QAAvB,EATM,CAUT;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAII,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CADA,CADJ,EAUI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CAFJ,CADJ,CADJ,CADJ;AAuBH;;;;EA9DqBd,S;;AAgE1BS,WAAW,CAACM,SAAZ,GAAwB;AACpBP,EAAAA,aAAa,EAAEF,SAAS,CAACU,IAAV,CAAeC;AADV,CAAxB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BL,IAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeM;AADK,GAAL;AAAA,CAA7B;;AAIA,eAAeb,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA,aAAa,EAAbA;AAAF,CAAlB,CAAP,CAA4CC,WAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Button , Header , Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchProducts } from '../actions/productActions';\nclass ProductList extends Component {\n    componentDidMount(){\n        this.props.fetchProducts();\n        console.log(this.props.products);\n    //    console.log(this.props);\n    }\n    // constructor(props){\n    //     super(props);\n    //     console.log(this.props);\n    // }\n    // componentWillReceiveProps(props){\n    //     // console.log(props);\n    // }\n    // componentDidUpdate() {\n    //     window.addEventListener('load', this.handleLoad);\n    //  }\n    productList = [];\n    // loadList(){\n    //     console.log('')\n    // }\n    render() {  \n    //     const productElement = this.props.products.map( (product, index) => (\n    //         <Table.Row key={index}>\n    //             <Table.Cell>{product.name}</Table.Cell>\n    //             <Table.Cell>{product.weight}</Table.Cell>\n    //             <Table.Cell>{product.availability}</Table.Cell>\n    //             <Table.Cell>{product.isEditable && (<Link to={{pathname:'/editproduct', state:{id:index}}}><Button primary>Edit</Button></Link>)}</Table.Cell>\n    //         </Table.Row>\n    //     ));\n       console.log(this.props.products);\n    // console.log(this.props);\n        // const productElement = this.props.products.map( (product, index) => (\n        //     <Table.Row key={index}>\n        //         <Table.Cell>{product.name}</Table.Cell>\n        //         <Table.Cell>{product.weight}</Table.Cell>\n        //         <Table.Cell>{product.availability}</Table.Cell>\n        //         <Table.Cell>{product.isEditable && (<Link to={{pathname:'/editproduct', state:{id:index}}}><Button primary>Edit</Button></Link>)}</Table.Cell>\n        //     </Table.Row>\n        // ));\n        return (\n            <div>\n                <React.Fragment>\n                    <Container>\n                        <Header size='large'>Mobile Products</Header>\n                        <Table celled>\n                            <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Name</Table.HeaderCell>\n                                <Table.HeaderCell>Weight</Table.HeaderCell>\n                                <Table.HeaderCell>Availability</Table.HeaderCell>\n                                <Table.HeaderCell>isEditable</Table.HeaderCell>\n                            </Table.Row>\n                            </Table.Header>\n                        \n                            <Table.Body>\n                                {/* {productElement} */}\n                            </Table.Body>\n                        </Table>\n                    </Container>\n                </React.Fragment>\n            </div>\n        )\n    }\n}\nProductList.propTypes = {\n    fetchProducts: PropTypes.func.isRequired\n}\nconst mapStateToProps = state => ({\n    products: state.products.items  \n});\n\nexport default connect(mapStateToProps, { fetchProducts })(ProductList);"]},"metadata":{},"sourceType":"module"}