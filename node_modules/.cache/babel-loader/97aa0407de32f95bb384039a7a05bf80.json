{"ast":null,"code":"import _defineProperty from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/charlis/Documents/UI Projects/ecomm/src/components/EditProduct.js\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form, Container, Radio, Dropdown } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { pricingInfo } from '../products';\nimport { fetchProducts } from '../actions/productActions';\n\nvar EditProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditProduct, _Component);\n\n  function EditProduct(props) {\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditProduct).call(this, props));\n\n    _this.handleChange = function (e, _ref) {\n      var value = _ref.value;\n\n      _this.setState({\n        price_tier: value,\n        priceRangeOptions: value === 'premier' ? pricingInfo.premier.map(function (tier, index) {\n          return {\n            key: index,\n            value: tier,\n            text: tier\n          };\n        }) : pricingInfo.budget.map(function (tier, index) {\n          return {\n            key: index,\n            value: tier,\n            text: tier\n          };\n        })\n      });\n    };\n\n    _this.toggle = function () {\n      return _this.setState({\n        editable: !_this.state.editable\n      });\n    };\n\n    _this.id = _this.props.location.state; // console.log(this.props.products);\n\n    _this.state = {\n      name: '',\n      weight: '',\n      availability: 0,\n      product_url: '',\n      price_tier: '',\n      price_range: [],\n      editable: true,\n      priceRangeOptions: []\n    }; // this.state = {\n    //     name: this.props.products[id].name,\n    //     weight: this.props.products[id].weight,\n    //     availability: this.props.products[id].availability,\n    //     product_url: this.props.products[id].productUrl,\n    //     price_tier: this.props.products[id].pricingTier,\n    //     price_range: this.props.products[id].priceRange,\n    //     editable: this.props.products[id].isEditable,\n    //     priceRangeOptions : (this.props.products[id].pricingTier === 'premier') ? pricingInfo.premier.map( function(value,index){\n    //         return {\n    //             key: index,\n    //             value: value,\n    //             text: value\n    //         }\n    //         }) : pricingInfo.budget.map( function(value,index){\n    //         return {\n    //             key: index,\n    //             value: value,\n    //             text: value\n    //         }\n    //     })   \n    // };\n\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchProducts();\n      this.setState({\n        name: this.props.products[this.id].name,\n        weight: this.props.products[this.id].weight,\n        availability: this.props.products[this.id].availability,\n        product_url: this.props.products[this.id].productUrl,\n        price_tier: this.props.products[this.id].pricingTier,\n        price_range: this.props.products[this.id].priceRange,\n        editable: this.props.products[this.id].isEditable,\n        priceRangeOptions: this.props.products[this.id].pricingTier === 'premier' ? pricingInfo.premier.map(function (value, index) {\n          return {\n            key: index,\n            value: value,\n            text: value\n          };\n        }) : pricingInfo.budget.map(function (value, index) {\n          return {\n            key: index,\n            value: value,\n            text: value\n          };\n        })\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var products = {\n        name: this.state.name,\n        weight: this.state.weight,\n        availability: this.state.availability,\n        product_url: this.state.product_url,\n        price_tier: this.state.price_tier,\n        price_range: this.state.price_range\n      };\n      this.props.fetchProducts();\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      this.productList = this.props.products; // console.log(this.props.products[0]);\n      //    this.setState({\n      //     name: this.props.products[this.id].name,\n      //     weight: this.props.products[this.id].weight,\n      //     availability: this.props.products[this.id].availability,\n      //     product_url: this.props.products[this.id].productUrl,\n      //     price_tier: this.props.products[this.id].pricingTier,\n      //     price_range: this.props.products[this.id].priceRange,\n      //     editable: this.props.products[this.id].isEditable,\n      //     priceRangeOptions : (this.props.products[this.id].pricingTier === 'premier') ? pricingInfo.premier.map( function(value,index){\n      //         return {\n      //             key: index,\n      //             value: value,\n      //             text: value\n      //         }\n      //         }) : pricingInfo.budget.map( function(value,index){\n      //         return {\n      //             key: index,\n      //             value: value,\n      //             text: value\n      //         }\n      //     })\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.load();\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditProduct;\n}(Component);\n\nEditProduct.propTypes = {\n  fetchProducts: PropTypes.func.isRequired,\n  products: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.products.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchProducts: fetchProducts\n})(EditProduct);","map":{"version":3,"sources":["/Users/charlis/Documents/UI Projects/ecomm/src/components/EditProduct.js"],"names":["React","Component","Button","Checkbox","Form","Container","Radio","Dropdown","PropTypes","connect","pricingInfo","fetchProducts","EditProduct","props","handleChange","e","value","setState","price_tier","priceRangeOptions","premier","map","tier","index","key","text","budget","toggle","editable","state","id","location","name","weight","availability","product_url","price_range","onChange","bind","onSubmit","products","productUrl","pricingTier","priceRange","isEditable","target","preventDefault","productList","load","propTypes","func","isRequired","array","mapStateToProps","items"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Checkbox, Form, Container, Radio, Dropdown } from 'semantic-ui-react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {pricingInfo} from '../products';\nimport { fetchProducts } from '../actions/productActions';\nclass EditProduct extends Component {\n    productList;\n    id;\n    constructor(props){\n        super(props);\n        this.id  = this.props.location.state;\n        // console.log(this.props.products);\n        this.state = {\n            name: '',\n            weight: '',\n            availability: 0,\n            product_url: '',\n            price_tier: '',\n            price_range: [],\n            editable: true,\n            priceRangeOptions : []   \n        };\n        // this.state = {\n        //     name: this.props.products[id].name,\n        //     weight: this.props.products[id].weight,\n        //     availability: this.props.products[id].availability,\n        //     product_url: this.props.products[id].productUrl,\n        //     price_tier: this.props.products[id].pricingTier,\n        //     price_range: this.props.products[id].priceRange,\n        //     editable: this.props.products[id].isEditable,\n        //     priceRangeOptions : (this.props.products[id].pricingTier === 'premier') ? pricingInfo.premier.map( function(value,index){\n        //         return {\n        //             key: index,\n        //             value: value,\n        //             text: value\n        //         }\n        //         }) : pricingInfo.budget.map( function(value,index){\n        //         return {\n        //             key: index,\n        //             value: value,\n        //             text: value\n        //         }\n        //     })   \n        // };\n        \n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentWillMount(){\n        this.props.fetchProducts();\n       this.setState({\n            name: this.props.products[this.id].name,\n            weight: this.props.products[this.id].weight,\n            availability: this.props.products[this.id].availability,\n            product_url: this.props.products[this.id].productUrl,\n            price_tier: this.props.products[this.id].pricingTier,\n            price_range: this.props.products[this.id].priceRange,\n            editable: this.props.products[this.id].isEditable,\n            priceRangeOptions : (this.props.products[this.id].pricingTier === 'premier') ? pricingInfo.premier.map( function(value,index){\n                return {\n                    key: index,\n                    value: value,\n                    text: value\n                }\n                }) : pricingInfo.budget.map( function(value,index){\n                return {\n                    key: index,\n                    value: value,\n                    text: value\n                }\n            })\n        });\n    }\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n    onSubmit(e){\n        e.preventDefault();\n        const products = {\n            name: this.state.name,\n            weight: this.state.weight,\n            availability: this.state.availability,\n            product_url: this.state.product_url,\n            price_tier: this.state.price_tier,\n            price_range: this.state.price_range\n\n        };\n        this.props.fetchProducts();\n    }\n    handleChange = (e, { value }) => {\n        this.setState({ \n        price_tier: value,\n        priceRangeOptions : (value=== 'premier') ? pricingInfo.premier.map( function(tier,index){\n            return {\n                key: index,\n                value: tier,\n                text: tier\n            }\n            }) : pricingInfo.budget.map( function(tier,index){\n            return {\n                key: index,\n                value: tier,\n                text: tier\n            }\n        })\n        \n    })\n}\n    load(){\n        this.productList=this.props.products;\n        // console.log(this.props.products[0]);\n        //    this.setState({\n        //     name: this.props.products[this.id].name,\n        //     weight: this.props.products[this.id].weight,\n        //     availability: this.props.products[this.id].availability,\n        //     product_url: this.props.products[this.id].productUrl,\n        //     price_tier: this.props.products[this.id].pricingTier,\n        //     price_range: this.props.products[this.id].priceRange,\n        //     editable: this.props.products[this.id].isEditable,\n        //     priceRangeOptions : (this.props.products[this.id].pricingTier === 'premier') ? pricingInfo.premier.map( function(value,index){\n        //         return {\n        //             key: index,\n        //             value: value,\n        //             text: value\n        //         }\n        //         }) : pricingInfo.budget.map( function(value,index){\n        //         return {\n        //             key: index,\n        //             value: value,\n        //             text: value\n        //         }\n        //     })\n        // });\n    }\n    toggle = () => this.setState({ editable: !this.state.editable })\n    render() {\n        this.load();\n        return (\n            <React.Fragment>\n                <Container>\n                <Form onSubmit={this.onSubmit}>\n                    {/* <Form.Field>\n                    <label>Name</label>\n                    <input name='name' value={this.props.products[1].name} onChange={this.onChange} required/>\n                    </Form.Field> */}\n                    {/* <Form.Field>\n                    <label>Weight</label>\n                    <input name='weight' value={this.state.weight} onChange={this.onChange} required/>\n                    </Form.Field>\n                    <Form.Field>\n                    <label>Availability</label>\n                    <input name='availability' value={this.state.availability} onChange={this.onChange}/>\n                    </Form.Field>\n                    <Form.Field>\n                    <label>Product URL</label>\n                    <input name='product_url' value={this.state.product_url} onChange={this.onChange} required/>\n                    </Form.Field>\n                    <Form.Field>\n                    <label>Price Tier</label>\n                    <Radio label='Budget' name='radioGroup' value='budget' checked={this.state.price_tier === 'budget'} onChange={this.handleChange}/>\n                    <Radio label='Premier' name='radioGroup' value='premier'  checked={this.state.price_tier === 'premier'} onChange={this.handleChange}/>\n                    </Form.Field>\n                    <Form.Field>\n                    <label>Price Range</label>\n                    <Dropdown placeholder={this.state.price_range} fluid selection options={this.state.priceRangeOptions}/>\n                    </Form.Field>\n                    <Form.Field>\n                    <Checkbox label='Is Editable' onChange={this.toggle} checked={this.state.editable} required/>\n                    </Form.Field>\n                    <Button type='submit'>Submit</Button> */}\n                </Form>\n                </Container>\n            </React.Fragment>\n        )\n    }\n    }\n    EditProduct.propTypes = {\n        fetchProducts: PropTypes.func.isRequired,\n        products: PropTypes.array.isRequired,\n    }\n    const mapStateToProps = state => ({\n        products: state.products.items\n    });\n    \n    export default connect(mapStateToProps, { fetchProducts })(EditProduct);"]},"metadata":{},"sourceType":"module"}