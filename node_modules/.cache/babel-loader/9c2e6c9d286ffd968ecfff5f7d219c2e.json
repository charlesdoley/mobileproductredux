{"ast":null,"code":"import _defineProperty from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/charlis/Documents/UI Projects/ecomm/src/components/ProductList.js\";\nimport React, { Component } from 'react';\nimport { Table, Button, Header, Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchProducts } from '../actions/productActions';\n\nvar ProductList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductList, _Component);\n\n  function ProductList() {\n    _classCallCheck(this, ProductList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProductList).apply(this, arguments));\n  }\n\n  _createClass(ProductList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchProducts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var productElement = this.props.products.map(function (product, index) {\n        var _React$createElement;\n\n        return React.createElement(Table.Row, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, product.name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, product.weight), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, product.availability), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, product.isEditable && React.createElement(Link, (_React$createElement = {\n          to: {\n            pathname: '/editproduct',\n            state: {\n              id: 1\n            }\n          }\n        }, _defineProperty(_React$createElement, \"to\", \"/editproduct\"), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(Button, {\n          primary: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Edit\"))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Header, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Mobile Products\"), React.createElement(Table, {\n        celled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Availability\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"isEditable\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, productElement)))));\n    }\n  }]);\n\n  return ProductList;\n}(Component);\n\nProductList.propTypes = {\n  fetchProducts: PropTypes.func.isRequired,\n  products: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.products.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchProducts: fetchProducts\n})(ProductList);","map":{"version":3,"sources":["/Users/charlis/Documents/UI Projects/ecomm/src/components/ProductList.js"],"names":["React","Component","Table","Button","Header","Container","Link","PropTypes","connect","fetchProducts","ProductList","props","productElement","products","map","product","index","name","weight","availability","isEditable","pathname","state","id","propTypes","func","isRequired","array","mapStateToProps","items"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAyBC,MAAzB,EAAkCC,SAAlC,QAAmD,mBAAnD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;;IACMC,W;;;;;;;;;;;;;yCACkB;AAChB,WAAKC,KAAL,CAAWF,aAAX;AACH;;;6BAEQ;AACL,UAAMG,cAAc,GAAG,KAAKD,KAAL,CAAWE,QAAX,CAAoBC,GAApB,CAAyB,UAACC,OAAD,EAAUC,KAAV;AAAA;;AAAA,eAC5C,oBAAC,KAAD,CAAO,GAAP;AAAW,UAAA,GAAG,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaD,OAAO,CAACE,IAArB,CADJ,EAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaF,OAAO,CAACG,MAArB,CAFJ,EAGI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaH,OAAO,CAACI,YAArB,CAHJ,EAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaJ,OAAO,CAACK,UAAR,IAAuB,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AAACC,YAAAA,QAAQ,EAAC,cAAV;AAA0BC,YAAAA,KAAK,EAAC;AAACC,cAAAA,EAAE,EAAC;AAAJ;AAAhC;AAAV,uDAAuD,cAAvD;AAAA;AAAA;AAAA,0FAAuE,oBAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAvE,CAApC,CAJJ,CAD4C;AAAA,OAAzB,CAAvB;AAQA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAII,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CADA,CADJ,EAUI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKX,cADL,CAVJ,CAFJ,CADJ,CADJ,CADJ;AAuBH;;;;EArCqBX,S;;AAuC1BS,WAAW,CAACc,SAAZ,GAAwB;AACpBf,EAAAA,aAAa,EAAEF,SAAS,CAACkB,IAAV,CAAeC,UADV;AAEpBb,EAAAA,QAAQ,EAAEN,SAAS,CAACoB,KAAV,CAAgBD;AAFN,CAAxB;;AAIA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAN,KAAK;AAAA,SAAK;AAC9BT,IAAAA,QAAQ,EAAES,KAAK,CAACT,QAAN,CAAegB;AADK,GAAL;AAAA,CAA7B;;AAIA,eAAerB,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA,aAAa,EAAbA;AAAF,CAAlB,CAAP,CAA4CC,WAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Button , Header , Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchProducts } from '../actions/productActions';\nclass ProductList extends Component {\n    componentWillMount(){\n        this.props.fetchProducts();\n    }\n\n    render() {\n        const productElement = this.props.products.map( (product, index) => (\n            <Table.Row key={index}>\n                <Table.Cell>{product.name}</Table.Cell>\n                <Table.Cell>{product.weight}</Table.Cell>\n                <Table.Cell>{product.availability}</Table.Cell>\n                <Table.Cell>{product.isEditable && (<Link to={{pathname:'/editproduct', state:{id:1}}}  to=\"/editproduct\" ><Button primary>Edit</Button></Link>)}</Table.Cell>\n            </Table.Row>\n        ));\n        return (\n            <div>\n                <React.Fragment>\n                    <Container>\n                        <Header size='large'>Mobile Products</Header>\n                        <Table celled>\n                            <Table.Header>\n                            <Table.Row>\n                                <Table.HeaderCell>Name</Table.HeaderCell>\n                                <Table.HeaderCell>Weight</Table.HeaderCell>\n                                <Table.HeaderCell>Availability</Table.HeaderCell>\n                                <Table.HeaderCell>isEditable</Table.HeaderCell>\n                            </Table.Row>\n                            </Table.Header>\n                        \n                            <Table.Body>\n                                {productElement}\n                            </Table.Body>\n                        </Table>\n                    </Container>\n                </React.Fragment>\n            </div>\n        )\n    }\n}\nProductList.propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired\n}\nconst mapStateToProps = state => ({\n    products: state.products.items\n});\n\nexport default connect(mapStateToProps, { fetchProducts })(ProductList);"]},"metadata":{},"sourceType":"module"}