{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport productReducer from './reducers/productReducer';\nimport { combineReducers } from 'redux';\nimport { products } from './products';\nimport { loadState, saveState } from './localStorage';\nvar allReducers = combineReducers({\n  products: productReducer\n});\nvar initialState = {\n  products: products\n};\nvar middleware = [thunk];\nconsole.log(store.getState());\nvar store = createStore(allReducers, initialState, compose(applyMiddleware.apply(void 0, middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nstore.subscribe(function () {\n  saveState(store.getState());\n});\nconsole.log(store.getState());\nexport default store;","map":{"version":3,"sources":["/Users/charlis/Documents/UI Projects/ecomm/src/store.js"],"names":["createStore","applyMiddleware","compose","thunk","productReducer","combineReducers","products","loadState","saveState","allReducers","initialState","middleware","console","log","store","getState","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,gBAArC;AACA,IAAMC,WAAW,GAAGJ,eAAe,CAAC;AAChCC,EAAAA,QAAQ,EAAEF;AADsB,CAAD,CAAnC;AAGA,IAAMM,YAAY,GAAG;AAClBJ,EAAAA,QAAQ,EAAEA;AADQ,CAArB;AAIA,IAAMK,UAAU,GAAG,CAACR,KAAD,CAAnB;AACAS,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,QAAN,EAAZ;AACA,IAAMD,KAAK,GAAGd,WAAW,CAACS,WAAD,EAAcC,YAAd,EAA4BR,OAAO,CAACD,eAAe,MAAf,SAAmBU,UAAnB,CAAD,EAAiCK,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAAxE,CAAnC,CAAzB;AACAH,KAAK,CAACI,SAAN,CAAgB,YAAI;AAChBV,EAAAA,SAAS,CAACM,KAAK,CAACC,QAAN,EAAD,CAAT;AACH,CAFD;AAGAH,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,QAAN,EAAZ;AACA,eAAeD,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport productReducer from './reducers/productReducer';\nimport { combineReducers } from 'redux';\nimport {products} from './products';\nimport { loadState, saveState } from './localStorage';\nconst allReducers = combineReducers({\n    products: productReducer\n});\nconst initialState = {\n   products: products\n};\n\nconst middleware = [thunk];\nconsole.log(store.getState());\nconst store = createStore(allReducers, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nstore.subscribe(()=>{\n    saveState(store.getState());\n})\nconsole.log(store.getState());\nexport default store;"]},"metadata":{},"sourceType":"module"}