{"ast":null,"code":"import _objectSpread from \"/Users/charlis/Documents/UI Projects/ecomm/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_PRODUCT, EDIT_PRODUCT } from '../actions/types';\nimport { products } from '../products';\nvar initialState = {\n  items: products\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    items: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_PRODUCT:\n      return _objectSpread({}, initialState, state);\n\n    case EDIT_PRODUCT:\n      console.log(state);\n      var updatedList = state.items.map(function (item, index) {\n        if (index === action.id) {\n          return _objectSpread({}, action.payload);\n        }\n\n        return item;\n      });\n      return {\n        items: updatedList\n      };\n\n    default:\n      return initialState;\n  }\n}","map":{"version":3,"sources":["/Users/charlis/Documents/UI Projects/ecomm/src/reducers/productReducer.js"],"names":["FETCH_PRODUCT","EDIT_PRODUCT","products","initialState","items","state","action","type","console","log","updatedList","map","item","index","id","payload"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,YAAxB,QAA4C,kBAA5C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEF;AADU,CAArB;AAGA,eAAe,YAAqC;AAAA,MAA5BG,KAA4B,uEAApB;AAACD,IAAAA,KAAK,EAAE;AAAR,GAAoB;AAAA,MAAPE,MAAO;;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,aAAL;AACI,+BACOG,YADP,EACuBE,KADvB;;AAGJ,SAAKJ,YAAL;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,UAAMK,WAAW,GAAGL,KAAK,CAACD,KAAN,CAAYO,GAAZ,CAAgB,UAACC,IAAD,EAAMC,KAAN,EAAgB;AAChD,YAAGA,KAAK,KAAKP,MAAM,CAACQ,EAApB,EAAuB;AACnB,mCACQR,MAAM,CAACS,OADf;AAGH;;AACD,eAAOH,IAAP;AACH,OAPmB,CAApB;AAQA,aAAO;AACHR,QAAAA,KAAK,EAAEM;AADJ,OAAP;;AAGJ;AACI,aAAOP,YAAP;AAnBR;AAqBH","sourcesContent":["import { FETCH_PRODUCT, EDIT_PRODUCT } from '../actions/types';\nimport {products} from '../products';\nconst initialState = {\n    items: products\n};\nexport default function(state = {items: []}, action){\n    switch(action.type){\n        case FETCH_PRODUCT:\n            return {\n                ...initialState,...state\n            }\n        case EDIT_PRODUCT:\n            console.log(state);\n            const updatedList = state.items.map((item,index) => {\n                if(index === action.id){\n                    return {\n                         ...action.payload \n                    }\n                }\n                return item\n            });\n            return {\n                items: updatedList\n            }\n        default:\n            return initialState;\n    }\n}"]},"metadata":{},"sourceType":"module"}